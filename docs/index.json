{"SPEC":{"name":"TSNCP Packet Information","summary":"TSNCP uses 5 types of packets:","module":"SPEC","module-kind":"module","url":"module/SPEC.html"},"client":{"name":"client","summary":"Utilities for a simple client.","module":"client","module-kind":"library","url":"library/client.html"},"client.connect":{"name":"client.connect()","summary":"Connects to the server.","module":"client","module-kind":"library","url":"library/client.html#v:connect"},"client.decryptMessage":{"name":"client.decryptMessage(message)","summary":"Decrypts a message.","module":"client","module-kind":"library","url":"library/client.html#v:decryptMessage"},"client.disconnect":{"name":"client.disconnect()","summary":"Disconnects from the server.","module":"client","module-kind":"library","url":"library/client.html#v:disconnect"},"client.flushTimestamps":{"name":"client.flushTimestamps()","summary":"Removes all timestamps that are held to prevent replay attacks.","module":"client","module-kind":"library","url":"library/client.html#v:flushTimestamps"},"client.new":{"name":"client.new(server [, modem [, verbose]])","summary":"Creates a client, ready to connect.","module":"client","module-kind":"library","url":"library/client.html#v:new"},"client.onMessage":{"name":"client.onMessage(name, func)","summary":"Connects a function to when a message is received.","module":"client","module-kind":"library","url":"library/client.html#v:onMessage"},"client.run":{"name":"client.run()","summary":"Runs the client.","module":"client","module-kind":"library","url":"library/client.html#v:run"},"client.transmit":{"name":"client.transmit(data)","summary":"Transmits data to the server, and hopefully returns the response.","module":"client","module-kind":"library","url":"library/client.html#v:transmit"},"client.transmitRaw":{"name":"client.transmitRaw(data [, string])","summary":"Throws some data out into the wild and gives you the request ID.","module":"client","module-kind":"library","url":"library/client.html#v:transmitRaw"},"client.verboseLog":{"name":"client.verboseLog(...)","module":"client","module-kind":"library","url":"library/client.html#v:verboseLog"},"ecc":{"name":"ecc","module":"ecc","module-kind":"library","url":"library/ecc.html"},"ecc.chacha20":{"name":"ecc.chacha20","module":"ecc","module-kind":"library","url":"library/ecc.html#v:chacha20"},"ecc.decrypt":{"name":"ecc.decrypt(data, key)","module":"ecc","module-kind":"library","url":"library/ecc.html#v:decrypt"},"ecc.encrypt":{"name":"ecc.encrypt(data, key)","module":"ecc","module-kind":"library","url":"library/ecc.html#v:encrypt"},"ecc.exchange":{"name":"ecc.exchange(privateKey, publicKey)","module":"ecc","module-kind":"library","url":"library/ecc.html#v:exchange"},"ecc.keypair":{"name":"ecc.keypair(seed)","module":"ecc","module-kind":"library","url":"library/ecc.html#v:keypair"},"ecc.random":{"name":"ecc.random","module":"ecc","module-kind":"library","url":"library/ecc.html#v:random"},"ecc.sha256":{"name":"ecc.sha256","module":"ecc","module-kind":"library","url":"library/ecc.html#v:sha256"},"ecc.sign":{"name":"ecc.sign(privateKey, message)","module":"ecc","module-kind":"library","url":"library/ecc.html#v:sign"},"ecc.verify":{"name":"ecc.verify(publicKey, message, signature)","module":"ecc","module-kind":"library","url":"library/ecc.html#v:verify"},"server":{"name":"server","summary":"Utilities for a simple server, including creation, events, and transmission.","module":"server","module-kind":"library","url":"library/server.html"},"server.addEvent":{"name":"server.addEvent(name, func)","summary":"Adds a function to the list of events.","module":"server","module-kind":"library","url":"library/server.html#v:addEvent"},"server.addSecuredEvent":{"name":"server.addSecuredEvent(name, func)","summary":"Adds a secured function.","module":"server","module-kind":"library","url":"library/server.html#v:addSecuredEvent"},"server.flushTimestamps":{"name":"server.flushTimestamps()","summary":"Removes all timestamps that are held to prevent replay attacks.","module":"server","module-kind":"library","url":"library/server.html#v:flushTimestamps"},"server.getSessions":{"name":"server.getSessions()","summary":"Gets all active sessions.","module":"server","module-kind":"library","url":"library/server.html#v:getSessions"},"server.new":{"name":"server.new(certificate, publicKey, privateKey [, modem [, port]])","summary":"Creates a new server with the provided information.","module":"server","module-kind":"library","url":"library/server.html#v:new"},"server.start":{"name":"server.start()","summary":"Starts the party.","module":"server","module-kind":"library","url":"library/server.html#v:start"},"server.transmit":{"name":"server.transmit(t, i, d)","summary":"Transmits a signed message","module":"server","module-kind":"library","url":"library/server.html#v:transmit"},"server.transmitSecure":{"name":"server.transmitSecure(dat, id [, reply [, key]])","summary":"Transmits a message to an authenticated client","module":"server","module-kind":"library","url":"library/server.html#v:transmitSecure"},"utils":{"name":"utils","summary":"Some basic utility functions.","module":"utils","module-kind":"library","url":"library/utils.html"},"utils.BAD_SIGNED_MAX_ATTEMPTS":{"name":"utils.BAD_SIGNED_MAX_ATTEMPTS = 10","module":"utils","module-kind":"library","url":"library/utils.html#v:BAD_SIGNED_MAX_ATTEMPTS"},"utils.RECONNECTION_MAX_ATTEMPTS":{"name":"utils.RECONNECTION_MAX_ATTEMPTS = 5","module":"utils","module-kind":"library","url":"library/utils.html#v:RECONNECTION_MAX_ATTEMPTS"},"utils.TIMEOUT_SECONDS":{"name":"utils.TIMEOUT_SECONDS = 30","module":"utils","module-kind":"library","url":"library/utils.html#v:TIMEOUT_SECONDS"},"utils.bats":{"name":"utils.bats(byteArray)","summary":"Converts a byte array to a string","module":"utils","module-kind":"library","url":"library/utils.html#v:bats"},"utils.byteArrayToString":{"name":"utils.byteArrayToString(byteArray)","summary":"Converts a byte array to a string","module":"utils","module-kind":"library","url":"library/utils.html#v:byteArrayToString"},"utils.compareCertificate":{"name":"utils.compareCertificate(a, b)","summary":"Compares two certificates","module":"utils","module-kind":"library","url":"library/utils.html#v:compareCertificate"},"utils.genNonce":{"name":"utils.genNonce(size)","summary":"Generates a nonce with the given size.","module":"utils","module-kind":"library","url":"library/utils.html#v:genNonce"},"utils.getCertificate":{"name":"utils.getCertificate(name, modem, forceRemote)","summary":"Gets a certificate.","module":"utils","module-kind":"library","url":"library/utils.html#v:getCertificate"},"utils.transmitInsecure":{"name":"utils.transmitInsecure(publicKey, modem, type, data, target, port)","module":"utils","module-kind":"library","url":"library/utils.html#v:transmitInsecure"},"utils.uuid":{"name":"utils.uuid()","summary":"Generates a uuid","module":"utils","module-kind":"library","url":"library/utils.html#v:uuid"}}